"
" $Author: Mostafa Shahverdy 
" $URL: http://www.mostafa.info
" $Date: 2013-03-13 15:51:49 +0430 
"
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


function MyTabLine()
	let s = ''
	for i in range(tabpagenr('$'))
		" select the highlighting
		if i + 1 == tabpagenr()
			let s .= '%#TabLineSel#'
		else
			let s .= '%#TabLine#'
		endif

		" set the tab page number (for mouse clicks)
		let s .= '%' . (i + 1) . 'T'

		" the label is made by MyTabLabel()
		let s .= '%X %{MyTabLabel(' . (i + 1) . ')} '
	endfor

	" after the last tab fill with TabLineFill and reset tab page nr
	let s .= '%#TabLineFill#%T'

	" right-align the label to close the current tab page
	if tabpagenr('$') > 1
		let s .= '%=%#TabLine#%999Xclose'
	endif

	return s
endfunction

function MyTabLabel(n)
	let buflist = tabpagebuflist(a:n)
	let winnr = tabpagewinnr(a:n)
	let buffer_count = tabpagewinnr(a:n, "$") 
	" just name of  buffer
	if buffer_count > 1
		return '/' . substitute(bufname(buflist[winnr - 1]), '^.*\/', '', ''). '['.buffer_count.']'
	else
		return '/' . substitute(bufname(buflist[winnr - 1]), '^.*\/', '', '')
	end if;
endfunction



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""



"function! RunPhpcs()
	"let l:filename=@%
	"let l:phpcs_output=system('phpcsf --report=csv --standard=ZEND '.l:filename)
	"let l:phpcs_list=split(l:phpcs_output, "\n")
	"unlet l:phpcs_list[0]
	"cexpr l:phpcs_list
	""cwindow
	"copen
"endfunction

"set errorformat+="%f"\\,%l\\,%c\\,%t%*[a-zA-Z]\\,"%m"
"command! Phpcs execute RunPhpcs()



"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"This is a replacement for FufBuffer
"Lightweight and quick.
function! BufSel(pattern)
  let bufcount = bufnr("$")
  let TermPattern = "^term://"
  let ExplorerPattern = "NetrwTreeListing"
  let currbufnr = 1
  let nummatches = 0
  let firstmatchingbufnr = 0
  while currbufnr <= bufcount
    if(bufexists(currbufnr) && buflisted(currbufnr))
      let currbufname = bufname(currbufnr)
      "We don't want to list terminals and Explorers
      if( match(currbufname, a:pattern) > -1 && match(currbufname, TermPattern) < 0 && match(currbufname, ExplorerPattern) < 0)
        echo currbufnr . ": ". bufname(currbufnr)
        let nummatches += 1
        let firstmatchingbufnr = currbufnr
      endif
    endif
    let currbufnr = currbufnr + 1
  endwhile
  if(nummatches == 1)
    execute ":buffer ". firstmatchingbufnr
  elseif(nummatches > 1)
    let desiredbufnr = input("Enter buffer number: ")
    if(strlen(desiredbufnr) != 0)
      execute ":buffer ". desiredbufnr
    endif
  else
    echo "No matching buffers"
  endif
endfunction

"Bind the BufSel() function to a user-command
command! -nargs=1 BufferSelect :call BufSel("<args>")
command! -nargs=0 BufferSelect :call BufSel(".")
